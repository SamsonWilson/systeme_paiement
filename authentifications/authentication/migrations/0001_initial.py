# Generated by Django 5.1.7 on 2025-03-22 19:04

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Chambre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('surface', models.FloatField()),
                ('taux_commission', models.DecimalField(decimal_places=2, default=0.0, max_digits=5)),
                ('prix', models.DecimalField(decimal_places=2, max_digits=10)),
                ('etat', models.CharField(choices=[('libre', 'Libre'), ('occupée', 'Occupée')], default='libre', max_length=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('date_creation', models.DateTimeField(auto_now_add=True)),
                ('date_modification', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Maison',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('adresse', models.CharField(max_length=255)),
                ('nombre_piece', models.DecimalField(decimal_places=0, max_digits=5)),
                ('code_postal', models.CharField(default='Defaut', max_length=10)),
                ('image', models.ImageField(upload_to='images/maison/')),
            ],
        ),
        migrations.CreateModel(
            name='Proprietaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('telephone', models.CharField(max_length=15)),
                ('adresse', models.TextField()),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme'), ('O', 'Autre')], max_length=1, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/proprietaire/')),
            ],
        ),
        migrations.CreateModel(
            name='Quartier',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=10)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='images/Quartier/')),
            ],
        ),
        migrations.CreateModel(
            name='TypeChambre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('propriétaire', 'Propriétaire'), ('locataire', 'Locataire'), ('admin', 'Admin')], max_length=50, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Ville',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='images/ville/')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('nom', models.CharField(max_length=100)),
                ('prenom', models.CharField(max_length=100)),
                ('tel', models.CharField(blank=True, max_length=15, null=True)),
                ('telephone_personne_prevenir', models.CharField(max_length=15)),
                ('nom_personne_prevenir', models.CharField(max_length=100)),
                ('prenom_personne_prevenir', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/photo/')),
                ('gender', models.CharField(blank=True, choices=[('M', 'Homme'), ('F', 'Femme'), ('O', 'Autre')], max_length=1, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('type_utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='authentication.usertype')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_debut_location', models.DateField()),
                ('montant_avance', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('date_fin_avance', models.DateField(blank=True, null=True)),
                ('montant_caution', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('nombre_mois_paye', models.IntegerField(default=0)),
                ('commission', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_total', models.DecimalField(decimal_places=2, max_digits=10)),
                ('image_contrat', models.ImageField(blank=True, help_text='Image du contrat de fin de location', null=True, upload_to='images/location/')),
                ('statut_paiement', models.CharField(choices=[('payé', 'Payé'), ('impayé', 'Impayé'), ('caution payée, pas avance', 'Caution payée, pas avance'), ('avance payée, pas caution', 'Avance payée, pas caution')], default='impayé', max_length=30)),
                ('mode_paiement', models.CharField(choices=[('espèce', 'Espèce'), ('virement', 'Virement bancaire'), ('mobile', 'Paiement mobile')], default='espèce', max_length=50)),
                ('date_paiement', models.DateField(blank=True, default=datetime.date.today, null=True)),
                ('chambre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='authentication.chambre')),
                ('utilisateur', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='locations', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='FinLocation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_fin_location', models.DateField()),
                ('raison_fin', models.TextField(blank=True, null=True)),
                ('montant_restant', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('montant_remboursement_caution', models.DecimalField(decimal_places=2, default=0, help_text='Montant remboursé au locataire pour la caution', max_digits=10)),
                ('image_contrat', models.ImageField(blank=True, help_text='Image du contrat de fin de location', null=True, upload_to='images/fin_location/')),
                ('etat_chambre_final', models.CharField(choices=[('libre', 'Libre'), ('occupée', 'Occupée')], default='libre', max_length=20)),
                ('location', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='fin_location', to='authentication.location')),
            ],
        ),
        migrations.AddField(
            model_name='chambre',
            name='maison',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chambres', to='authentication.maison'),
        ),
        migrations.CreateModel(
            name='PaiementLoyer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre_mois_paye', models.IntegerField(default=0)),
                ('montant_paye', models.DecimalField(decimal_places=2, max_digits=10)),
                ('date_paiement', models.DateField(default=datetime.date.today)),
                ('date_fin_paiement', models.DateField(blank=True, null=True)),
                ('mode_paiement', models.CharField(choices=[('espèce', 'Espèce'), ('virement', 'Virement bancaire'), ('mobile', 'Paiement mobile')], default='espèce', max_length=50)),
                ('statut_paiement', models.CharField(choices=[('confirmé', 'Confirmé'), ('en attente', 'En attente')], default='en attente', max_length=30)),
                ('commission', models.DecimalField(decimal_places=2, default=0, help_text='Commission automatique basée sur la chambre.', max_digits=10)),
                ('commentaire', models.TextField(blank=True, null=True)),
                ('location', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='paiements', to='authentication.location')),
            ],
            options={
                'ordering': ['-date_paiement'],
            },
        ),
        migrations.AddField(
            model_name='maison',
            name='proprietaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maisons', to='authentication.proprietaire'),
        ),
        migrations.AddField(
            model_name='maison',
            name='quartier',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='maisons', to='authentication.quartier'),
        ),
        migrations.AddField(
            model_name='chambre',
            name='type_chambre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='authentication.typechambre'),
        ),
        migrations.AddField(
            model_name='quartier',
            name='ville',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='quartiers', to='authentication.ville'),
        ),
    ]
